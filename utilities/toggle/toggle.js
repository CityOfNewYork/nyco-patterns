var Toggle=function(){"use strict";var e=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},t=function(){function e(e,t){for(var s=0;s<t.length;s++){var a=t[s];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,s,a){return s&&e(t.prototype,s),a&&e(t,a),t}}(),s=function(){function s(t){var a=this;e(this,s);var i=document.querySelector("body");return t=t||{},this._settings={selector:t.selector?t.selector:s.selector,namespace:t.namespace?t.namespace:s.namespace,inactiveClass:t.inactiveClass?t.inactiveClass:s.inactiveClass,activeClass:t.activeClass?t.activeClass:s.activeClass},i.addEventListener("click",function(e){e.target.matches(a._settings.selector)&&(e.preventDefault(),a._toggle(e))}),this}return t(s,[{key:"_toggle",value:function(e){var t=this,s=e.target,a=!1;if(a=s.getAttribute("href")?document.querySelector(s.getAttribute("href")):a,!(a=s.getAttribute("aria-controls")?document.querySelector("#"+s.getAttribute("aria-controls")):a))return this;if(this.elementToggle(s,a),s.dataset[this._settings.namespace+"Undo"]){var i=document.querySelector(s.dataset[this._settings.namespace+"Undo"]);i.addEventListener("click",function(e){e.preventDefault(),t.elementToggle(s,a),i.removeEventListener("click")})}return this}},{key:"elementToggle",value:function(e,t){""!==this._settings.activeClass&&(e.classList.toggle(this._settings.activeClass),t.classList.toggle(this._settings.activeClass)),""!==this._settings.inactiveClass&&t.classList.toggle(this._settings.inactiveClass);for(var a=0;a<s.elAriaRoles.length;a++)e.getAttribute(s.elAriaRoles[a])&&e.setAttribute(s.elAriaRoles[a],!("true"===e.getAttribute(s.elAriaRoles[a])));for(var i=0;i<s.targetAriaRoles.length;i++)t.getAttribute(s.targetAriaRoles[i])&&t.setAttribute(s.targetAriaRoles[i],!("true"===t.getAttribute(s.targetAriaRoles[i])));return e.getAttribute("href")&&t.classList.contains(this._settings.activeClass)&&(window.location.hash="",window.location.hash=e.getAttribute("href")),this}}]),s}();return s.selector='[data-js*="toggle"]',s.namespace="toggle",s.inactiveClass="hidden",s.activeClass="active",s.elAriaRoles=["aria-pressed","aria-expanded"],s.targetAriaRoles=["aria-hidden"],s}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
