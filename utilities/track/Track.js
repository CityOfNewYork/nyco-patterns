var Track=function(){"use strict";var e=function(){return this};e.debug=function(){return"1"===e.getUrlParameter(e.PARAMS.DEBUG)},e.getUrlParameter=function(e,t){var r=t||window.location.search,n=e.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]"),a=new RegExp("[\\?&]"+n+"=([^&#]*)").exec(r);return null===a?"":decodeURIComponent(a[1].replace(/\+/g," "))},e.localize=function(e){var t=e||"",r=(window.LOCALIZED_STRINGS||[]).filter(function(t){return!(!t.hasOwnProperty("slug")||t.slug!==e)&&t});return r[0]&&r[0].hasOwnProperty("label")?r[0].label:t},e.PARAMS={DEBUG:"debug"},e.SELECTORS={parseMarkdown:'[data-js="markdown"]'};var t=function e(t){var r=this,n=document.querySelector("body");return t=t||{},this._settings={selector:t.selector?t.selector:e.selector},n.addEventListener("click",function(e){if(e.target.matches(r._settings.selector)){var t=e.target.dataset.trackKey,n=JSON.parse(e.target.dataset.trackData);r.click(t,n)}}),this};return t.prototype.click=function(r,n){var a=n.map(function(e){return e.hasOwnProperty(t.key)&&(e[t.key]=window.location.pathname+"/"+e[t.key]),e}),o=this.webtrends(r,a),c=this.gtag(r,a);return e.debug()&&console.dir({Track:[o,c]}),a},t.prototype.view=function(t,r,n){var a=this.webtrends(r,n),o=this.gtagView(t,r);e.debug()&&console.dir({Track:[a,o]})},t.prototype.webtrends=function(e,r){var n=[{"WT.ti":e}];r[0]&&r[0].hasOwnProperty(t.key)?n.push({"DCS.dcsuri":r[0][t.key]}):Object.assign(n,r);var a={argsa:n.flatMap(function(e){return Object.keys(e).flatMap(function(t){return[t,e[t]]})})};return"undefined"!=typeof Webtrends&&Webtrends.multiTrack(a),["Webtrends",a]},t.prototype.gtag=function(e,r){var n=r.find(function(e){return e.hasOwnProperty(t.key)}),a={event_category:e};return"undefined"!=typeof gtag&&gtag(t.key,n[t.key],a),["gtag",t.key,n[t.key],a]},t.prototype.gtagView=function(e,r){var n={app_name:e,screen_name:r};return"undefined"!=typeof gtag&&gtag("event","screen_view",n),["gtag",t.key,"screen_view",n]},t.selector='[data-js*="track"]',t.key="event",t}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
