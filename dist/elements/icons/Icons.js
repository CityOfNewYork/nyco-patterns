var Icons=function(){"use strict";var n=function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")},e=function e(){return n(this,e),this};e.debug=function(){return"1"===e.getUrlParameter(e.PARAMS.DEBUG)},e.getUrlParameter=function(n,e){var t=e||window.location.search,r=n.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]"),o=new RegExp("[\\?&]"+r+"=([^&#]*)").exec(t);return null===o?"":decodeURIComponent(o[1].replace(/\+/g," "))},e.localize=function(n){var e=n||"",t=(window.LOCALIZED_STRINGS||[]).filter(function(e){return!(!e.hasOwnProperty("slug")||e.slug!==n)&&e});return t[0]&&t[0].hasOwnProperty("label")?t[0].label:e},e.parseMarkdown=function(){if("undefined"==typeof markdown)return!1;for(var n=document.querySelectorAll(e.SELECTORS.parseMarkdown),t=function(t){var r=n[t];fetch(r.dataset.jsMarkdown).then(function(n){if(n.ok)return n.text();r.innerHTML="",e.debug()&&console.dir(n)}).catch(function(n){e.debug()&&console.dir(n)}).then(function(n){try{r.classList.toggle("animated"),r.classList.toggle("fadeIn"),r.innerHTML=markdown.toHTML(n)}catch(n){}})},r=0;r<n.length;r++)t(r)},e.PARAMS={DEBUG:"debug"},e.SELECTORS={parseMarkdown:'[data-js="markdown"]'};var t=function t(r){return n(this,t),r=r||t.path,fetch(r).then(function(n){if(n.ok)return n.text();e.debug()&&console.dir(n)}).catch(function(n){e.debug()&&console.dir(n)}).then(function(n){var e=document.createElement("div");e.innerHTML=n,e.setAttribute("aria-hidden",!0),e.setAttribute("style","display: none;"),document.body.appendChild(e)}),this};return t.path="icons.svg",t}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
