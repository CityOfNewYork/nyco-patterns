/ Layout
= extend('layouts/default')

/ Styles
= partial('partials/styles.slm')

/ Links
= partial('partials/links.slm')

/ Partials
= partial('partials/head.mixin.slm')
= partial('partials/header.mixin.slm')
= partial('partials/nav.mixin.slm')

/ Content blocks
= content('head')
  = mixin('head', 'Colors')

= content('header')
  = mixin('header')

= content('content')

  h1 class='${class_demo_headers}' Colors

  section class='${class_demo}'

    div class='${class_demo_col1}'
      div class='${class_demo_cola}'
        h2#utility-classes
          a href="#utility-classes" Utility Classes

        p You can use every color as a utility class for static and hover states. These are the prefixes that are available;
        p
          code class='code' = 'bg-<color>'
          = '   =   Background color'
        p
          code class='code' = 'text-<color>'
          = '   =   Text color'
        p
          code class='code' = 'border-<color>'
          = '   =   Border color'
        p
          | Refer to
          a<> href='${link_tailwind_docs}' Tailwind CSS docs
          | for full details on using color utilities and <code>hover:</code> states.

    div class='${class_demo_col2}'
      div class='${class_demo_colb}'

        h2#demonstration
          a href='#demonstration' Demonstration

        - for key in this.vars.colors
          div class='inline-block p-1 w-full mb-3'
            code class='code' = '<prefix>-' + key
            div class='${class_swatch}'
              div class='bg-${key} ${class_swatch__block}'
              div class='${class_swatch__label}' = this.vars.colors[key]
