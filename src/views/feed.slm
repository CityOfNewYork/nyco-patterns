/ Layout
= extend('layouts/default')

/ Styles
= partial('partials/styles.slm')

/ Links
= partial('partials/links.slm')

/ Partials
= partial('partials/head.mixin.slm')
= partial('partials/header.mixin.slm')
= partial('partials/nav.mixin.slm')

/ Component
= partial('../objects/feed/feed.slm')

/ Content blocks
= content('head')
  = mixin('head', 'Medium Widget')

= content('header')
  = mixin('header')

= content('content')

  h1 class='${class_demo_headers}' Feed

  section class='${class_demo}'

    div class='${class_demo_col1}'
      div class='${class_demo_cola}'

        h2#about
          a href='#about' About

        p
          | The <b>Feed Object</b> can take any feed and display is as a widget anywhere on a page. Currently, it's configured to work with Medium feeds. You can add combine multiple feed urls to display as many posts from different user profiles, publications, or tagged pages in publications. Refer to the <a href="https://help.medium.com/hc/en-us/articles/214874118-RSS-feeds">Medium RSS Feed Documentation</a> on available feeds.

        h2#usage
          a href='#usage' Usage

        p
          | You can use <a href='customize-your-feed'>this form to customize your own feed</a> or you can follow the steps below.

        p
          | To use the feed, include the following scripts in your page:

        p
          div class='code-block'
            pre
              div
                = '<script src="https://cdn.polyfill.io/v2/polyfill.js?features=Promise&gated=gated" type="text/javascript"> '
                span class='code__comment' = '<!-- The feed component uses Promises so this polyfill is needed for IE support -->'
              div = '<script src="https://cdn.rawgit.com/CityOfNewYork/nyco-patterns/61bbe2a8/dist/scripts/modules/Feed.js" type="text/javascript">'

        / The stylesheet hasn't been exported individually yet
        /p
        /  | Optionally, but recommended, include the base styling for the feed:

        /p
        /  div class='code-block'
        /    pre
        /      div = '<link rel="stylesheet" src="https://cityofnewyork.github.io/nyco-patterns/styles/feed.css">'

        p
          | Then, add a container with the feed's id and the execution script with configuration parameters.

        p
          div class='code-block'
            pre
              div
                = '<div id="js-feed" style="color: lightsteelblue"></div>'
                span class='code__comment' = '<!-- The "color: lightsteelblue"" sets the border-color property for individual posts. You could also try setting "font-size: 85%" if you would like a widget for a smaller side column -->'
              div
                = '<script type="text/javascript">'
              div
                = '  new Feed({'
              div
                = '    selector: "#js-feed", '
                span class='code__comment' = '// The DOM element selctor for the feed. Defaults to #js-feed'
              div
                = '    feed: "https://medium.com/feed/@nycopportunity/", '
                span class='code__comment' = '// Required. The feed you want to display. May be an array of multiple feeds'
              div
                = '  }).init();'
              div
                = '</script>'

        p
          | <code>new Feed({});</code> creates a feed, accepting a configuration object as a parameter. The object should contain the configuration you would like for the feed. Note: the <code>selector</code> and <code>feed</code> parameters are required to display a feed. <code>.init();</code> is a function that executes initialization of the feed and displays it. Below is a list of the rest of the default configuration options. See the <a href="https://help.medium.com/hc/en-us/articles/214874118-RSS-feeds">Medium RSS Feed Documentation</a> for more details on their feeds.

        h2#configuration
          a href='#configuration' Configuration

        p
          | To change an option, add the desired variable to the configuration object above. Keep in mind they should be the same type (string or number) as they are listed below.

        = mixin('feed-configuration')

        h2#templates
          a href='#templates' Templates

        p
          | The feed comes shipped with ready-to-use LoDash template components for Medium feeds. Each component can be overwritten with the <code>template.component</code> configuration parameter. You can copy the templates below to get started creating your own template and refer to the <a href="https://lodash.com/docs/4.17.5#template">LoDash documentation for templates</a>.

        = mixin('feed-template')

        p
          | Here's an example of passing your own template to the configuration:

        p
          div class='code-block'
            pre
              div = 'var MyTemplate = {'
              div = '  opener: "<div>...template content...</div>"'
              div = '  header: "<div>...template content...</div>"'
              div = '  posts: "<div>...template content...</div>"'
              div = '  closer: "<div>...template content...</div>"'
              div = '};'
              div = 'new Feed({'
              div
                = '  selector: "#feed", '
                span class='code__comment' = '// required'
              div
                = '  feed: "https://medium.com/feed/@nycopportunity/", '
                span class='code__comment' = '// required'
              div = '  template: MyTemplate'
              div = '}).init();'

        p
          | Templates are passed the <code>config</code> object and whatever the response of the feed is. In Medium's case, they pass the <code>feed</code> parameter and posts within the <code>items</code> parameter in the response from their RSS feed. To see the data that gets passed to the template to use in your template, set the <code>log</code> configuration parameter to <code>true</code>. Open up the console to see the data for this particular feed demonstration.

        h2#rss-to-json
          a href='#rss-to-json' RSS to JSON

        p
          | The <b>Feed Object</b> uses an API from <a href="https://rss2json.com">https://rss2json.com</a> to convert desired RSS feed into a consumable JSON object. See the <a href="https://rss2json.com">RSS 2 JSON Online Converter</a> documentation for details.

    div class='${class_demo_col2}'
      div class='${class_demo_colb}'

        h2#demonstration
          a href='#demonstration' Demonstration

        div class='border-8 p-4 border-secondary-white'
          = mixin('feed-demo')

= content('script')
  = mixin('feed-script')
