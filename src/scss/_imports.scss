@charset 'utf-8';

// if @font-face is used it needs to be first imported first.
@import 'elements/fonts/fonts';

/*************
 * Components
 *************/

// Components are elements that require isolated styling. Examples include buttons,
// textfields, select boxes, grouped navigation, dropdowns, etc. They may include
// utilities within them. Not all components are required for each application.
// Component namespaces are prefixed with 'c-'.

@import 'components/official/official';
// components - end


/**********
 * Objects
 **********/

// Objects are elements with more robust styling requirements. They may include
// Components and utilities within them. Examples include headers, footers, modals,
// sliders, and charts. Not all Objects are required for each application and some
// will require their own Objects. Object namespaces are prefixed with 'o-'.

// @import 'objects/.../...';
@import 'objects/header/header';
@import 'objects/footer/footer';
@import 'objects/navigation/navigation';
// objects - end


/**********
* Elements
***********/

// Elements include universal styles, atomic patterns, and css systems. Examples
// include classes that assign color, modify the display of elements, or set up
// scaffolding like typography or grid systems. Uitilities will have their own
// namespace prefixes based on their attributes.

@import 'elements/base/base';
@import 'elements/code/code';
@import 'elements/links/links';
@import 'elements/layouts/layouts';
@import 'elements/icons/icons';
@import 'elements/tables/tables';
@import 'elements/buttons/buttons';
@import 'elements/inputs/inputs';
@import 'elements/checkboxes/checkboxes';
// elements - end


/***********
* Utilities
************/

@import 'utilities/fonts/fonts';
@import 'utilities/type/type';
@import 'utilities/colors/colors';
@import 'utilities/toggle/toggle';
@import 'utilities/animate/animate';
@import 'tailwind';
