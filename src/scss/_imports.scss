@charset 'utf-8';

/***********************
 * Asset Paths and CDN
 ***********************/

// This is the path to your asset folders. Uncomment and set to override the
// default. By default, it is set to look for assets one director up from the
// distributed.
// stylesheet '../' ex;
// $cdn: 'path/to/assets/';

// The CDN can be set to another local path, or, it can be set to the 'cdn'
// within the $variables map. This default uses jsDelivr to pull the assets
// from the patterns GitHub repository and the tag of the installed version.
// ex;
// @import 'config/variables';
// $cdn: map-get($variables, 'cdn');

// These are the default paths to the different asset types within the asset
// folder. Uncomment and set to override their defaults.
// $path-to-fonts: 'fonts/';
// $path-to-images: 'images/';
// $path-to-svg: 'svg/';

// if @font-face is used it needs to be first imported first.
@import 'elements/fonts/fonts';

/*************
 * Components
 *************/

// Components are elements that require isolated styling. Examples include buttons,
// textfields, select boxes, grouped navigation, dropdowns, etc. They may include
// utilities within them. Not all components are required for each application.
// Component namespaces are prefixed with 'c-'.

@import 'components/official/official';
// components - end


/**********
 * Objects
 **********/

// Objects are elements with more robust styling requirements. They may include
// Components and utilities within them. Examples include headers, footers, modals,
// sliders, and charts. Not all Objects are required for each application and some
// will require their own Objects. Object namespaces are prefixed with 'o-'.

// @import 'objects/.../...';
@import 'objects/header/header';
@import 'objects/footer/footer';
@import 'objects/feed/feed';
@import 'objects/navigation/navigation';
@import 'objects/map/map';
@import 'objects/content/content';
// objects - end


/**********
* Elements
***********/

// Elements include universal styles, atomic patterns, and css systems. Examples
// include classes that assign color, modify the display of elements, or set up
// scaffolding like typography or grid systems. Uitilities will have their own
// namespace prefixes based on their attributes.

@import 'elements/base/base';
@import 'elements/code/code';
@import 'elements/links/links';
@import 'elements/layouts/layouts';
@import 'elements/icons/icons';
@import 'elements/tables/tables';
@import 'elements/buttons/buttons';
@import 'elements/select/select';
@import 'elements/inputs/inputs';
@import 'elements/checkboxes/checkboxes';
@import 'elements/radios/radios';
// elements - end


/***********
* Utilities
************/

@import '@nycopportunity/patterns-framework/src/utilities/spinner/spinner';
@import '@nycopportunity/patterns-framework/src/utilities/toggle/toggle';
@import 'utilities/type/type';
@import 'utilities/colors/colors';
@import 'utilities/animate/animate';
@import 'utilities/tailwindcss/tailwindcss';
