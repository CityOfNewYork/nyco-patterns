

= mixin('feed-configuration')
  div class='${class_demo_class_containers}'
    div#js-configuration
      div v-for='item, name in config'
        div v-if='' class='mb-2'
          div class='code-block mb-1'
            pre
              div
                = '{{ name }}'
              div class='code__comment'
                = 'type: {{ typeof item }}'
              div v-if='item != ""' class='code__comment'
                = 'default: {{ item }}'
          ul v-if='typeof item === "object" && typeof docs[name] !== "string"'
            li v-for='value, key in item'
              p
                code class='mr-1' = '{{ key }}'
                = '{{ docs[name][key] }}'
          p v-if='typeof docs[name] === "string"'
            = '{{ docs[name] }}'


= mixin('feed-template')
  div class='${class_demo_class_containers}'
    code class='code' templates.opener

  div class='${class_demo_class_containers}'
    div class='code-block'
      pre
        div class='code__comment' = '// The opening template tag or wrapper of the entire feed.'
        div = '<section class="o-feed <%- settings.classes.wrapper %>">'

  div class='${class_demo_class_containers}'
    code class='code' templates.header

  div class='${class_demo_class_containers}'
    div class='code-block'
      pre
        div class='code__comment' = '// The header template that sits at the top of the posts.'
        div = '<header class="o-feed__header <%- settings.classes.header %>">'
        div = '  <div class="o-feed__avatar <%- settings.classes.avatar %>">'
        div = '    <img src="<%- feed.image %>" '
        div = '         width="<%- settings.avatarImageRatio[0] %>" '
        div = '         height="<%- settings.avatarImageRatio[1] %>">'
        div = '  </div>'
        div = '  <a class="o-feed__url <%- settings.classes.avatar %>"'
        div = '     href="<%- feed.url %>" target="_blank" rel="noopener noreferrer nofollow">'
        div = '    <%- feed.title %>'
        div = '  </a>'
        div = '</header>'

  div class='${class_demo_class_containers}'
    code class='code' templates.posts

  div class='${class_demo_class_containers}'
    div class='code-block'
      pre
        div class='code__comment' = '// The posts loop including the posts template.'
        div = '<% _each(items, function(post) { %>'
        div = '  <div class="c-feed-item <%- settings.classes.card %>">'
        div = '    <h4 class="c-feed-item__title <%- settings.classes.title %>">'
        div = '      <a class="c-feed-item__link <%- settings.classes.link %>"'
        div = '         href="<%- post.guid %>"'
        div = '         target="_blank"'
        div = '         rel="noopener noreferrer nofollow">'
        div = '        <%- post.title %>'
        div = '      </a>'
        div = '    </h4>'
        div = '    <div class="c-feed-item__thumbnail <%- settings.classes.thumbnail %>">'
        div = '      <img style="width: <%- settings.postImageRatio[0] %>;max-height: <%- settings.postImageRatio[1] %>;" '
        div = '           src="<%- post.thumbnail %>">'
        div = '    </div>'
        div = '    <p class="c-feed-item__excerpt <%- settings.classes.excerpt %>">'
        div = '      <%- post.excerpt %><%- settings.postExcerptTrail %>'
        div = '    </p>'
        div = '    <div class="c-feed-item__footer <%- settings.classes.cardFooter %>">'
        div = '      <a class="c-feed-item__cta <%- settings.classes.cta %>" '
        div = '         href="<%- post.guid %>" '
        div = '         target="_blank"'
        div = '         rel="noopener noreferrer nofollow">'
        div = '        <%- settings.postCtaText %>'
        div = '      </a>'
        div = '      <span class="c-feed-item__date <%- settings.classes.date %>" '
        div = '            title="<%- settings.postDateTitle %>">'
        div = '        <%- post.date %>'
        div = '      </span>'
        div = '    </div>'
        div = '  </div>'
        div = '<% }); %>'

  div class='${class_demo_class_containers}'
    code class='code' templates.closer

  div class='${class_demo_class_containers}'
    div class='code-block'
      pre
        div class='code__comment' = '// The closing template tag or wrapper of the entire feed.'
        div = '</section>'


= mixin('feed-demo')
  #js-feed style='color: lightsteelblue'


= mixin('feed-script')
  script src='https://cdn.jsdelivr.net/npm/vue@2.5.16/dist/vue.js'
  script src='https://cdn.polyfill.io/v2/polyfill.js?features=Object.assign&gated=gated'
  script src='scripts/modules/FeedDocs.js'
  javascript:

    var source = {
      polyfill: 'https://cdn.polyfill.io/v2/polyfill.js?features=Promise&gated=gated',
      module: 'scripts/modules/Feed.js',
      cdn: 'https://cdn.rawgit.com/CityOfNewYork/nyco-patterns/61bbe2a8/dist/scripts/modules/Feed.js'
    };

    // Configuration for the page feed
    var config = {
      selector: '#js-feed',
      feed: [
        'https://medium.com/feed/nyc-opportunity/',
        'https://civicservicedesign.com/feed/'
      ]
    };

    // Adds a select listener to the entire element.
    function selectEmbed() {
      this.select();
    }

    // Fill the embed textarea with the initial script, replacing the config
    // template string with our configuration.
    function createEmbed(config, source) {
      var clipboard = '<script type="text/javascript">(function(config){var ss={pf:"' + source.polyfill + '",nf:"' + source.cdn + '"};for(k in ss){var s=ss[k];ss[k]=document.createElement("script");ss[k].setAttribute("src",s);document.head.appendChild(ss[k]);};ss.nf.onload=function(){var f=new Feed(config).init();}})({{config}});<\/script>';
      var embed = document.getElementById('js-embed');
      if (embed) {
        embed.addEventListener('focus', selectEmbed);
        embed.addEventListener('click', selectEmbed);
        embed.value = clipboard.replace('{{config}}', JSON.stringify(config));
        window.location.hash = 'your-feed';
        embed.focus();
      }
    } createEmbed(config, source);

    // Self initiating function for the Feed script. This should mostly mirror
    // the clipboard string in the createEmbed function above.
    (function(config, source, createEmbed) {
      var ss = {
        pf: source.polyfill,
        nf: source.module
      };
      for (k in ss) {
        var s = ss[k];
        ss[k] = document.createElement('script');
        ss[k].setAttribute('src', s);
        document.head.appendChild(ss[k]);
      };
      ss.nf.onload = function() {
        var f = new Feed(config).init();

        // Everything below this is not needed for the embed
        var d = new FeedDocs();

        if (document.getElementById('js-configuration')) {
          new Vue({
            el: '#js-configuration',
            data: {
              config: f.default,
              docs: d.default
            },
          });
        }

        if (document.getElementById('js-controls')) {
          new Vue({
            el: '#js-controls',
            data: {
              config: Object.assign(f.default, config),
              docs: d.default
            },
            methods: {
              render: function(event) {
                event.preventDefault();
                new Feed(Object.assign(config, this.config)).init();
                createEmbed(this.config, source);
              }
            }
          });
        }
        // end

      };
    })(config, source, createEmbed);
