@import 'config/variables';

$colors: map-get($variables, 'colors');
$statuses: map-get($variables, 'colorStatuses');
$combinations: map-get($variables, 'colorCombinations');

$color-base-white: map-get($colors, 'base-white');
$color-base-black: map-get($colors, 'base-black');
$color-secondary-grey: map-get($colors, 'secondary-grey');
$color-primary-red: map-get($colors, 'primary-red');
$color-primary-navy: map-get($colors, 'primary-navy');

@mixin combination($selector, $combination, $colors, $smoothing: false) {
  $color: map-get($combination, 'color');
  $background: map-get($combination, 'background-color');
  $hyperlinks: map-get($combination, 'hyperlinks');
  $visited: map-get($combination, 'visited');
  $hover: map-get($combination, 'hover');
  $headings: map-get($combination, 'headings');

  color: map-get($colors, $color);
  background-color: map-get($colors, $background);

  @if map-get($combination, 'font-weight') {
    font-weight: map-get($combination, 'font-weight');
  }

  @if $smoothing {
    @include font-smooth;
  }

  a:not(.btn) {
    color: map-get($colors, $hyperlinks);

    &:visited {
      color: map-get($colors, $visited);
    }

    &:hover, &:active, &:focus {
      color: map-get($colors, $hover);
    }
  }

  h1, h4, h5, h6, .h1, .h4, .h5, .h6 {
    color: map-get($colors, $headings);
  }
}