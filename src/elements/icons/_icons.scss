/**
 * Icons
 */

// Dependencies
@import 'config/variables';
@import 'scss/functions/str-replace';

$screens: map-get($variables, 'screens');

// Declarations
@mixin iconSizes($variant: '') {
  @each $key, $var in map-get($variables, 'iconSizes') {
    .#{$variant}icon-#{$key} {
      width: nth($var, 1) !important;
      height: nth($var, 2) !important;
    }
  }
}

[class*='icon-'] {
  overflow: visible !important;
}

[class*='bg-icon-'] {
  display: inline-block;
}

@each $key, $var in map-get($variables, 'icons') {
  $path: $key;

  @if map-get($variables, 'iconVariants') {
    @each $str in map-get($variables, 'iconVariants') {
      $path: str-replace($path, $str);
    }
  }

  .bg-#{$key} {
    width: nth($var, 1);
    height: nth($var, 2);
    background-image: url('../svg/#{$path}.svg');
    background-repeat: no-repeat;
    background-size: 100%;
  }

  .#{$key} {
    width: nth($var, 1);
    height: nth($var, 2);
  }

}

// the layout execution
@include iconSizes;

// the layout breakpoint execution
@each $screen, $s in $screens {
  @media (min-width: #{$s}px) {
    $variant: $screen + '\\:';
    @include iconSizes($variant);
  }
}
